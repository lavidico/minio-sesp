version: '3.8'
services:
  minio:
    image: minio/minio
    command: minio server /data --console-address ":9001" --address ":9002"
    container_name: minio
    ports:
      - '9002:9002'
      - '9001:9001'
    volumes:
      - 'minio-volume:/data'
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    networks:
      - sesp-microsservicos
  db-apps:
    image: br.gov.mt.sesp/db-apps
    container_name: db-apps
    ports:
      - '35433:5432'
    volumes:
      - db-apps-volume:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sespmt
    networks:
      - sesp-microsservicos
  ldap:
    image: br.gov.mt.sesp/ldap
    container_name: ldap-server
    command: --copy-service
    environment:
      LDAP_ADMIN_PASSWORD: admin
      LDAP_BASE_DN: dc=mt,dc=gov,dc=br
      LDAP_DOMAIN: mt.gov.br
    ports:
      - 3389:389
    networks:
      - sesp-microsservicos
  ldap-admin:
    image: osixia/phpldapadmin:0.7.2
    container_name: ldap-server-admin
    ports:
      - 3390:80
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: ldap-server
      PHPLDAPADMIN_HTTPS: 'false'
    depends_on: 
      - ldap
    networks:
      - sesp-microsservicos
  db-keycloak:
    image: br.gov.mt.sesp/db-keycloak
    container_name: db-keycloak
    ports:
      - '35432:5432'
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak
    networks:
      - sesp-microsservicos
  keycloak:
    image: br.gov.mt.sesp/keycloak
    container_name: keycloak
    ports:
      - '38080:8080'
    restart: always
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: postgres
      DB_ADDR: db-keycloak
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: postgres
    networks:
      - sesp-microsservicos
    depends_on: 
      - db-keycloak
      - db-apps
      - ldap
  redis:
    image: redis:6.0.9
    container_name: redis
    ports:
      - '36379:6379'
    restart: always
    networks:
      - sesp-microsservicos
  redisinsight:
    image: oblakstudio/redisinsight:latest
    container_name: redisinsight
    ports:
      - '5540:5540'
    restart: always
    networks:
      - sesp-microsservicos
  scope:
    image: weaveworks/scope:1.13.2
    container_name: scope
    network_mode: "host"
    pid: "host"
    privileged: true
    labels:
      - "works.weave.role=system"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    command:
      - "--probe.docker=true"
  rabbitmq:
    image: rabbitmq:3.8.9-management-alpine
    container_name: rabbitmq
    ports:
      - '15672:15672'
      - '15692:15692'      
      - '25676:25676'
      - '35672:5672'
    #command: bash -c "/opt/rabbitmq/sbin/rabbitmq-plugins enable rabbitmq_prometheus"      
    restart: always
    environment: 
      RABBITMQ_DEFAULT_USER: sespmt
      RABBITMQ_DEFAULT_PASS: sespmt
    networks:
      - sesp-microsservicos
  mongodb-graylog:
    image: mongo:4.4
    container_name: mongodb-graylog
    ports:
      - '27017:27017'
    networks: 
      - sesp-microsservicos
  elasticsearch-graylog:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: elasticsearch-graylog
    ports:
      - '9200:9200'
      - '9300:9300'
    environment: 
      - "http.host=0.0.0.0"
      - "network.host=0.0.0.0"
      - "transport.host=localhost"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - sesp-microsservicos
  graylog:
    image: graylog/graylog:4.0.5
    container_name: graylog
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh    
    ports:
      - '9000:9000'
      - '1514:1514'
      - '1514:1514/udp'
      - '12201:12201'
      - '12201:12201/udp'
    volumes:
      #- ./graylog/graylog.conf:/usr/share/graylog/data/config/graylog.conf
      - ./graylog/graylog-plugin-alertmanagercallback-1.2.2.jar:/usr/share/graylog/plugin/graylog-plugin-alertmanagercallback-1.2.2.jar
    environment: 
      # CHANGE ME (must be at least 16 characters)!
      - "GRAYLOG_ELASTICSEARCH_VERSION=7"
      - "GRAYLOG_PASSWORD_SECRET=somepasswordpepper"
      # Password: admin
      - "GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918"
      - "GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/"
    restart: always
    links:
      - mongodb-graylog:mongo
      - elasticsearch-graylog:elasticsearch
    networks:
      - sesp-microsservicos
    depends_on: 
      - mongodb-graylog
      - elasticsearch-graylog
  autenticacao:
    image: br.gov.mt.sesp/autenticacao
    container_name: autenticacao
    ports:
      - '8000:8080'
    restart: always
    networks:
      - sesp-microsservicos
    depends_on:
      - db-apps 
      - keycloak
  prometheus:
    image: prom/prometheus:v2.25.2
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    networks:
      - sesp-microsservicos
    depends_on:
      - rabbitmq
      - alertmanager
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    logging:
      driver: 'none'
    ports:
      - '1025:1025' #smtp server
      - '8025:8025' #web ui
    networks:
      - sesp-microsservicos
  alertmanager:
    image: prom/alertmanager:v0.21.0
    container_name: alertmanager
    ports:
      - '9093:9093'
    command: --config.file=/etc/alertmanager/alertmanager.yml
    volumes:
      - ./alertmanager:/etc/alertmanager
      - alertmanager-data:/alertmanager
    networks:
      - sesp-microsservicos      
    depends_on:
      - mailhog      
  grafana:
    image: grafana/grafana:7.4.5
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - ./grafana:/etc/grafana
      - ./grafana/provisioning:/usr/share/grafana/conf/provisioning/
      #- ./grafana/provisioning/dashboards:/usr/share/grafana/conf/provisioning/dashboards
      #- ./grafana/provisioning/datasources:/usr/share/grafana/conf/provisioning/datasources
      - grafana-data:/grafana
    environment:
      # https://grafana.com/plugins/flant-statusmap-panel
      # https://grafana.com/plugins/grafana-piechart-panel
      # https://grafana.com/plugins/grafana-polystat-panel
      # https://grafana.com/plugins/jdbranham-diagram-panel
      # https://grafana.com/plugins/michaeldmoore-multistat-panel
      # https://grafana.com/plugins/vonage-status-panel
      # https://grafana.com/plugins/yesoreyeram-boomtable-panel
      GF_INSTALL_PLUGINS: 'flant-statusmap-panel,grafana-piechart-panel'  
    restart: always
    networks:
      - sesp-microsservicos
    depends_on:
      - prometheus
      - mailhog

  spring-boot-admin:
    image: br.gov.mt.sesp/spring-boot-admin
    container_name: spring-boot-admin
    ports:
      - '8007:8080'
    restart: always
    networks:
      - sesp-microsservicos

networks:
  sesp-microsservicos:
    external: true

volumes:
  minio-volume:
    external: true
  db-keycloak-volume:
    external: true
  db-apps-volume:
    external: true
  prometheus-data:
  grafana-data:
  alertmanager-data: